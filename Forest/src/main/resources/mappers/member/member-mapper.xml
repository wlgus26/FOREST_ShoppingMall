<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hm.forest.member.model.mapper.MemberMapper">
	<sql id="selectMemberSql">
		SELECT NO,
			   ID,
			   PASSWORD,
			   NAME,
			   EMAIL,
			   PHONE,
			   PCODE,
			   ADDRESS1,
			   ADDRESS2,
			   CREATE_DATE,
			   UPDATE_DATE,
			   ROLE
		FROM MEMBER 
	</sql>
	
	<resultMap id="memberResultMap" type="Member" >
		<id property="no" column="NO"/>
		<result property="id" column="ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="pcode" column="PCODE"/>
		<result property="address1" column="ADDRESS1"/>
		<result property="address2" column="ADDRESS2"/>
		<result property="status" column="STATUS"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="updateDate" column="UPDATE_DATE"/>
		<result property="role" column="ROLE"/>
	</resultMap>
	
	<resultMap id="cartResultMap" type="Cart">
		<id property="no" column="NO"/>
		<result property="memberNo" column="MB_NO"/>
		<result property="productNo" column="PD_NO"/>
		<result property="quantity" column="QUANTITY"/>
		<result property="color" column="COLOR"/>
		<result property="size" column="SIZE_SML"/>
		<result property="price" column="PRICE"/>
		<result property="image" column="IMAGE"/>
		<result property="category" column="CATEGORY"/>
		<result property="name" column="NAME"/>
		<result property="discountrate" column="DISCOUNTRATE"/>
		<result property="status" column="STATUS"/>
	</resultMap>

	<select id="selectCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
	</select>
	
	<select id="selectAll" resultMap="memberResultMap">
		<include refid="selectMemberSql"/>
		WHERE STATUS='Y'
	</select>	
	
	<select id="selectMemberById" parameterType="string" resultMap="memberResultMap">
		SELECT NO,
			   ID,
			   PASSWORD,
			   NAME,
			   EMAIL,
			   PHONE,
			   PCODE,
			   ADDRESS1,
			   ADDRESS2,
			   STATUS,
			   ROLE
		FROM MEMBER 
		WHERE ID=#{id}
	</select>
	
	<insert id="insertMember" parameterType="Member"
			useGeneratedKeys="true" keyColumn="NO" keyProperty="no">
		INSERT INTO MEMBER (
			NO,
			ID,
			PASSWORD,
			NAME,
			EMAIL,
			PHONE,
			PCODE,
			ADDRESS1,
			ADDRESS2
		) VALUES (
			MEMBER_SEQ.NEXTVAL,
			#{id},
			#{password},
			#{name},
			#{email},
			#{phone},
			#{pcode},
			#{address1},
			#{address2}			
		)
	</insert>
	
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER 
		SET 
			PASSWORD=#{password},
			PCODE=#{pcode},
			ADDRESS1=#{address1},
			ADDRESS2=#{address2},
			UPDATE_DATE=SYSDATE
		WHERE NO=#{no}
	</update>
	
	<update id="updateMemberStatus" parameterType="map">
		UPDATE MEMBER
		SET
			STATUS = #{status}
		WHERE
			NO = #{no}
	</update>
	
	<select id="selectMemberCountByStatus" parameterType="String" resultType="_int">
		SELECT COUNT(*)
		FORM MEMBER
		WHERE STATUS
	</select>
	
	<select id="selectmembercount" resultType="_int">
	<!-- 
		<include refid="selectMemberSql"/>
	 -->
		SELECT COUNT(*) FROM MEMBER
	</select>
	
	<select id="getmemberlists" resultMap="memberResultMap">
	<!-- 
		<include refid="selectMemberSql"/>
	 -->
		SELECT NO,
			   ID,
			   PASSWORD,
			   NAME,
			   EMAIL,
			   PHONE,
			   PCODE,
			   ADDRESS1,
			   ADDRESS2,
			   STATUS,
			   CREATE_DATE,
			   UPDATE_DATE,
			   ROLE
		FROM MEMBER 
	</select>
	
	<!-- 장바구니에 제품 추가 -->
	<insert id="insertIntoCart" parameterType="Cart">
	<selectKey resultType="_int" keyProperty="no" order="BEFORE">
		SELECT SEQ_CART_NO.NEXTVAL FROM DUAL
	</selectKey>
		INSERT INTO CART(
			NO,
			MB_NO,
		    PD_NO,
		    COLOR,
		    QUANTITY,
		    SIZE_SML
		) VALUES(
			#{no},
			#{memberNo},
			#{productNo},
			#{color},
			#{quantity},
			#{size}
		)
	</insert>

	<!-- 장바구니에 추가된 제품 목록 조회 -->
	<select id="selectCartLists" parameterType="_int" resultMap="cartResultMap">
		SELECT C.NO,
			   P.CATEGORY,
			   C.MB_NO, 
		       C.PD_NO,
		       P.IMAGE, 
		       P.NAME, 
		       P.PRICE,
		       P.STATUS,
		       P.DISCOUNTRATE, 
		       C.COLOR,
		       C.QUANTITY,
		       C.SIZE_SML
		FROM CART C
		LEFT OUTER JOIN PRODUCT P ON (C.PD_NO = P.NO)
		WHERE MB_NO = #{memberNo}
		ORDER BY C.NO DESC
	</select>
	
	<!-- 장바구니에 추가된 제품 목록 삭제 -->
	<delete id="deleteSelectedCartList" parameterType="string">
	  DELETE FROM CART
	  WHERE NO IN #{cartNo}
	</delete>
</mapper>